{"version":3,"sources":["Table.js","GameDetail.js","Filter.js","Result.js","App.js","index.js"],"names":["Table","useStyles","makeStyles","breakpoints","spacing","root","marginTop","borderRadius","transition","boxShadow","position","maxWidth","margin","overflow","background","display","flexDirection","alignItems","paddingBottom","up","paddingTop","media","width","marginLeft","marginRight","height","backgroundColor","transform","content","top","left","opacity","padding","cta","textTransform","React","memo","props","styles","useBlogTextInfoContentStyles","shadowStyles","button","useOverShadowStyles","arrCate","details","categories","split","slice","Card","className","cx","CardMedia","image","id","price","name","Chip","label","color","size","Button","style","href","movie","theme","justifyContent","flexWrap","listStyle","chip","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","withStyles","head","common","white","body","TableCell","action","hover","TableRow","createData","link","mainResults","table","App","to","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.0335baf9.chunk.js","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\n\nimport \"./styles/Table.css\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map(({ region, name }, id) => (\n        <tr key={id}>\n          <td>{region}</td>\n          <td>\n            <strong>{name}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useBlogTextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/blog';\r\nimport { useOverShadowStyles } from '@mui-treasury/styles/shadow/over';\r\nimport {Chip} from \"@material-ui/core\";\r\nimport './styles/GameCard.css';\r\n\r\nconst useStyles = makeStyles(({ breakpoints, spacing }) => ({\r\n    root: {\r\n        marginTop: 15,\r\n        borderRadius: spacing(2), // 16px\r\n        transition: '0.3s',\r\n        boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n        position: 'relative',\r\n        // marginLeft: 20,\r\n        maxWidth: '85%',\r\n        margin: '0 auto',\r\n        overflow: 'initial',\r\n        background: '#d0caca',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        paddingBottom: spacing(2),\r\n        [breakpoints.up('md')]: {\r\n            // flexDirection: 'row',\r\n            paddingTop: spacing(2),\r\n        },\r\n    },\r\n    media: {\r\n        width: '80%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: spacing(-1),\r\n        height: 0,\r\n        paddingBottom: '48%',\r\n        borderRadius: spacing(2),\r\n        backgroundColor: '#fff',\r\n        position: 'relative',\r\n        [breakpoints.up('md')]: {\r\n            width: '100%',\r\n            marginLeft: spacing(-3),\r\n            marginTop: 0,\r\n            transform: 'translateX(-8px)',\r\n        },\r\n        '&:after': {\r\n            content: '\" \"',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            // backgroundImage: 'linear-gradient(147deg, #fe8a39 0%, #fd3838 74%)',\r\n            borderRadius: spacing(2), // 16\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n    content: {\r\n        padding: 24,\r\n    },\r\n    cta: {\r\n        marginTop: 24,\r\n        textTransform: 'initial',\r\n    },\r\n}));\r\n\r\nexport const BlogCardDemo = React.memo(function BlogCard(props) {\r\n    const styles = useStyles();\r\n    const {\r\n        button: buttonStyles,\r\n        ...contentStyles\r\n    } = useBlogTextInfoContentStyles();\r\n    const shadowStyles = useOverShadowStyles();\r\n    const arrCate = props.details.categories.split(\" \").slice(0, 3);\r\n    return (\r\n        <Card className={cx(styles.root, shadowStyles.root)}>\r\n            <CardMedia\r\n                className={styles.media}\r\n                image={\r\n                    'https://cdn.cloudflare.steamstatic.com/steam/apps/730/ss_118cb022b9a43f70d2e5a2df7427f29088b6b191.jpg?t=1668125812'\r\n                }\r\n                // image={props.details.header_image}\r\n            />\r\n                <div id='card-container' >\r\n                    <span>{props.details.price}</span>\r\n                    <h2>{props.details.name}</h2>\r\n                    <div id='labels' >\r\n                        <Chip label={arrCate[0]} color=\"primary\" size='small'/>\r\n                        <Chip label={arrCate[1]} color=\"primary\" size='small' />\r\n                        <Chip label={arrCate[2]} color=\"primary\" size='small' />\r\n                    </div>\r\n                </div>\r\n                <Button style={{marginTop: 20, backgroundColor: 'darkblue'}}>\r\n                    <a href={props.details.movie}  // props.details.url\r\n                    id='game-link'>\r\n                        Read more\r\n                    </a>\r\n                </Button>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default BlogCardDemo","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Slider, TextField} from \"@material-ui/core\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport * as axios from 'axios'\r\n\r\nimport './styles/Filter.css'\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStylesChips = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction ChipsArray(props) {\r\n    const classes = useStylesChips();\r\n    const [chipData, setChipData] = props.chips;\r\n\r\n    const handleDelete = (chipToDelete) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n    return (\r\n        <Paper component=\"ul\" className={classes.root}>\r\n            {chipData.map((data) => {\r\n                let icon;\r\n\r\n                if (data.label === 'React') {\r\n                    icon = <TagFacesIcon />;\r\n                }\r\n\r\n                return (\r\n                    <li key={data.key}>\r\n                        <Chip\r\n                            icon={icon}\r\n                            label={data.label}\r\n                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                            className={classes.chip}\r\n                        />\r\n                    </li>\r\n                );\r\n            })}\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function ControlledAccordions(props) {\r\n    const [stepState, setStepState] = props.step;\r\n    const [submitItems, setSubmitItems] = props.submit;\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const [price, setPrice] = React.useState(10);\r\n    const [year, setYear] = React.useState(2000);\r\n    const [chipData, setChipData] = React.useState([\r\n        { key: 0, label: 'English' },\r\n        { key: 1, label: 'French' },\r\n        { key: 2, label: 'Spanish' },\r\n        { key: 3, label: 'Chinese' },\r\n        { key: 4, label: 'Arabic ' },\r\n        { key: 5, label: 'German' },\r\n        { key: 6, label: 'Russian' },\r\n        { key: 7, label: 'Portuguese' },\r\n    ]);\r\n\r\n\r\n    const handlePrice = (event, newValue) => {\r\n        setPrice(parseInt(newValue));\r\n    };\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleSubmit = () => {\r\n        let submitLabels = [];\r\n        chipData.forEach((value) => {\r\n            submitLabels.push(value.label)\r\n        });\r\n        setSubmitItems({\r\n            inputGames: submitItems.inputGames,\r\n            filters: {\r\n                price: price,\r\n                year: year,\r\n                labels: submitLabels,\r\n            },\r\n        });\r\n        // use axios to post data\r\n        setStepState(stepState+1);\r\n    };\r\n\r\n    return (\r\n        <div className='main-filters'>\r\n            <h1>Game Filter</h1>\r\n            <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} className='accordion'>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Price $</Typography>\r\n                    <Typography className={classes.secondaryHeading}>Filter games less than</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Slider value={price}\r\n                            onChange={handlePrice}\r\n                            aria-labelledby=\"continuous-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            max={50}\r\n                    />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')} className='accordion'>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2bh-content\"\r\n                    id=\"panel2bh-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Publish Year</Typography>\r\n                    <Typography className={classes.secondaryHeading}>\r\n                        Filter games whose publish year is later than\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <TextField\r\n                        label='Year'\r\n                        variant='outlined'\r\n                        onChange={(e) => {\r\n                            setYear(parseInt(e.target.value))\r\n                        }}\r\n                    />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')} className='accordion'>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel3bh-content\"\r\n                    id=\"panel3bh-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Language</Typography>\r\n                    <Typography className={classes.secondaryHeading}>\r\n                        Filter games by language\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <ChipsArray chips={[chipData, setChipData]}/>\r\n                </AccordionDetails>\r\n            </Accordion >\r\n            <Button variant=\"contained\" style={{marginTop: 10}} onClick={handleSubmit}>Submit</Button>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as axios from 'axios'\r\n\r\nimport Colors from './PublicStyle';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#325288',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, link) {\r\n    return { name, link };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 'xxx'),\r\n    createData('Ice cream sandwich', 'xxx'),\r\n    createData('Eclair', 'xxx'),\r\n    createData('Cupcake', 'xxx'),\r\n    createData('Gingerbread', 'xxx'),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    mainResults: {\r\n        margin: '5 auto',\r\n    },\r\n    table: {\r\n        margin: '10 auto'\r\n    },\r\n});\r\n\r\nexport default function ResultsTables(props) {\r\n    const classes = useStyles();\r\n    const [submitItems, setSubmitItems] = props.submit;\r\n    const [results, setResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const postUrl = 'xxxx';  // the post target\r\n\r\n    // load data\r\n    useEffect(() => {\r\n            const axios = require('axios');\r\n            axios.post(postUrl, submitItems)\r\n                .then((res) => {\r\n                    setResults(res.data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    alert('Please check your input and then submit again');\r\n                })\r\n        }\r\n        , []);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={classes.mainResults}>\r\n                <h1>Recommended Games</h1>\r\n                <h4>Loading...</h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainResults}>\r\n            <h1>Recommended Games</h1>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table aria-label=\"customized table\" >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell> </StyledTableCell>\r\n                            <StyledTableCell>Game Name</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Link</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {results.map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell align=\"left\">\r\n                                    <img src={row.picture}/>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"left\">\r\n                                    <a>{row.link}</a>\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './styles/App.css';\r\nimport Ranking from './Ranking.js';\r\nimport Recommender from \"./Recommender\";\r\nimport Map from './Map';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className='navigation'>\r\n            <div className='nav'>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/games\" className='linkName'>Game Ranking</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/recommendation\" className='linkName' >Game Recommender</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n        // <Router>\r\n        //     <div>\r\n        //         <div className='navigation'>\r\n        //             <div className='nav'>\r\n        //                 <nav>\r\n        //                     <ul>\r\n        //                         <li>\r\n        //                             <Link to=\"/games\" className='linkName'>Game Ranking</Link>\r\n        //                         </li>\r\n        //                         <li>\r\n        //                             <Link to=\"/recommendation\" className='linkName' >Game Recommender</Link>\r\n        //                         </li>\r\n        //                     </ul>\r\n        //                 </nav>\r\n        //             </div>\r\n        //         </div>\r\n        //         {/* A <Switch> looks through its children <Route>s and\r\n        //     renders the first one that matches the current URL. */}\r\n        //         <Routes>\r\n        //             <Route path=\"/games\" element={<Ranking />}/>\r\n        //             <Route path=\"/recommendation\" element={<Recommender/>}/>\r\n        //         </Routes>\r\n        //     </div>\r\n        // </Router>\r\n    );\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport Ranking from \"./Ranking\";\nimport App from './App';\nimport Recommender from \"./Recommender\";\n// reactDOM is the\nReactDOM.render(\n  <React.Fragment>\n      {/*<Ranking/>*/}\n      <App/>\n  </React.Fragment>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}